package hpc.mvn.web.exploit;
//----------
import com.sun.net.httpserver.Headers;
import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.LogManager;
import java.io.IOException;
import java.io.OutputStream;
import java.net.InetSocketAddress;
//----------
import com.sun.net.httpserver.HttpExchange;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpServer;
import java.io.BufferedReader;
import java.io.FileReader;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.net.*;
import java.io.*;
import java.util.Properties;
/**
 *
 * @author	Muhammad Nur Irsyad
 * @id		1807422020
 * @class	CCIT SEC 8 (TMJ)
 */
public class Main {
	private static final Logger logger = LogManager.getLogger(Main.class);
	private static int port;
	private static URL url;
	//----------	
	public static void main (String[] args) throws Exception {
		System.setProperty("com.sun.jndi.ldap.object.trustURLCodebase", "true");
		System.setProperty("com.sun.jndi.cosnaming.object.trustURLCodebase", "true");   		
		//----------			
        try {
            url = new URL("http://192.168.1.6:2022/revshell.properties");
            InputStream in;
            try {
                in = url.openStream();
                Reader reader = new InputStreamReader(in, "UTF-8");
                Properties properties = new Properties();
                try {properties.load(reader);} finally {reader.close();}
                //
                port = Integer.parseInt(properties.getProperty("PORT_JAVA_HTTP"));
                //
            } catch (Exception ex) {}
        } catch (Exception ex) {}    		
		//----------			
        HttpServer server = HttpServer.create(new InetSocketAddress(port), 0);
        server.createContext("/", new ExploitHandler());
        server.setExecutor(null);
        server.start();
		logger.debug("starting log4hshell http server at :"+port+" ...");		
	}
	
	static class ExploitHandler implements HttpHandler {
		@Override
		public void handle(HttpExchange t) throws IOException {
			Headers payload = t.getRequestHeaders();
			logger.info	(payload.getFirst("Payload"));
			//----------
			String last_log = "", line = "";
			DateTimeFormatter dtf_ext = DateTimeFormatter.ofPattern("dd_MM_yyyy");
			DateTimeFormatter dtf_par = DateTimeFormatter.ofPattern("MM-yyyy");		
			LocalDateTime now = LocalDateTime.now();
			//----------		
			String path = "src\\log\\"+dtf_par.format(now)+"\\app.log."+dtf_ext.format(now);
			String os_name = System.getProperty("os.name");
			if (!os_name.contains("Windows")) {path = "src/log/"+dtf_par.format(now)+"/app.log."+dtf_ext.format(now);}
			//----------					
			try {
				FileReader fr = new FileReader(path);
				BufferedReader br = new BufferedReader(fr);
				while((line = br.readLine()) != null) {
					last_log = line;
				}
			} catch (IOException ex) {}			
			//----------
			String response = "{\"data\":{ \"status\": 200, \"log\": \""+path+"\", \"payload\": \""+last_log+"\"}}";			
			t.getResponseHeaders().set("Content-Type", "application/json");			
			t.sendResponseHeaders(200, response.length());
			OutputStream os = t.getResponseBody();
			os.write(response.getBytes());
			os.close();
		}
	}	
}
